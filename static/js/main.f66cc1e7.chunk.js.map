{"version":3,"sources":["listItems.js","userCre.js","App.js","serviceWorker.js","index.js"],"names":["listItems","props","items","onSub","onSubmit","onChang","onChange","val","value","map","item","className","key","onClick","deleteItem","width","height","viewBox","class","fill","xmlns","d","fill-rule","id","text","placeholder","type","duration","easing","userCre","state","email","password","login","bind","handleChange","e","preventDefault","console","log","this","firebase","signInWithEmailAndPassword","then","u","catch","error","setState","target","name","Component","App","user","loginCheck","speed","currentItem","handleInput","addItem","signOut","onAuthStateChanged","Date","now","newItem","newItems","filteredItems","filter","ref","child","on","snap","authListener","replaceDev","logout","React","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f66cc1e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./listItems.css\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction listItems(props) {\r\n  const items = props.items;\r\n  const onSub = props.onSubmit;\r\n  const onChang = props.onChange;\r\n  const val = props.value;\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <li className=\"list\" key={items.key}>\r\n            <div\r\n              onClick={() => {\r\n                props.deleteItem(item.key);\r\n              }}\r\n            >\r\n              <svg\r\n                width=\"1.5em\"\r\n                height=\"1.5em\"\r\n                viewBox=\"0 0 16 16\"\r\n                class=\"bi bi-trash\"\r\n                fill=\"white\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <p id=\"pTag\">\r\n              <p id=\"vertitalSlash\">|</p>\r\n              {item.text}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"main\">\r\n        <header>\r\n          <form id=\"to-do-list\" onSubmit={onSub}>\r\n            <textarea\r\n              placeholder=\"Enter Here\"\r\n              type=\"text\"\r\n              value={val}\r\n              onChange={onChang}\r\n            />\r\n            <div id=\"bMargin\">\r\n              <button type=\"submit\" onChange={onChang}>\r\n                Add\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </header>\r\n        <FlipMove duration={100} easing=\"ease-in-out\" className=\"items\">\r\n          {listItems}\r\n        </FlipMove>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default listItems;\r\n","import React, { Component } from \"react\";\r\nimport \"./userCre.css\";\r\nimport * as firebase from \"firebase\";\r\n\r\nclass userCre extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"123456\",\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  login(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.email);\r\n    console.log(this.state.password);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((u) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"userLog\">\r\n          <form className=\"form\">\r\n            <h1>Sign In</h1>\r\n            <div className=\"InputField\">\r\n              <label>Email:</label>\r\n              <input\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email here...\"\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>Password:</label>\r\n              <input\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"pass\"\r\n                placeholder=\"Enter password\"\r\n              />\r\n            </div>\r\n            <div className=\"btn\">\r\n              <button type=\"submit\" id=\"login\" onClick={this.login}>\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <center>\r\n            <div className=\"userNote\">\r\n              <p>\r\n                By signing up you are agreeing to all the user terms and\r\n                servives\r\n              </p>\r\n            </div>\r\n          </center>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default userCre;\r\n","import React from \"react\";\nimport * as firebase from \"firebase\";\nimport \"./App.css\";\nimport ListItems from \"./listItems\";\nimport UserCre from \"./userCre\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      loginCheck: false,\n      speed: 0,\n      items: [],\n      currentItem: {\n        text: null,\n        key: null,\n      },\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n  logout() {\n    firebase.auth().signOut();\n  }\n  authListener() {\n    firebase.auth().onAuthStateChanged((user) => {\n      //console.log(user);\n      if (user) {\n        this.setState({ user });\n        // localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        //localStorage.removeItem('user');\n      }\n    });\n  }\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    });\n  }\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if (newItem.text !== null) {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: null,\n          key: null,\n        },\n      });\n    }\n  }\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter((item) => item.key !== key);\n    this.setState({\n      items: filteredItems,\n    });\n  }\n  componentDidMount() {\n    const rootRef = firebase.database().ref();\n    const speedRef = rootRef.child(\"speed\");\n    speedRef.on(\"value\", (snap) => {\n      this.setState({\n        speed: snap.val(),\n      });\n    });\n\n    this.authListener();\n  }\n  render() {\n    let replaceDev;\n    if (this.state.user) {\n      replaceDev = (\n        <ListItems\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          onSubmit={this.addItem}\n          value={this.state.currentItem.text}\n          onChange={this.handleInput}\n        ></ListItems>\n      );\n    } else {\n      replaceDev = <UserCre />;\n    }\n    return (\n      <div>\n        <header id=\"header\">\n          <center>\n            <h3>SHAHMEN IS WATCHIN!</h3>\n          </center>\n          <div className=\"HBtn\">\n            {this.state.user ? (\n              <button className=\"logoutBTN\" onClick={this.logout}>\n                Logout\n              </button>\n            ) : (\n              <div>{this.state.speed}</div>\n            )}\n          </div>\n        </header>\n        <div>{replaceDev}</div>\n        <div className=\"footer\">\n          <p>\n            All copy fucking rights goes to <i>HM Muneeb UR rehman</i>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAXUv88yvsngGKfQgjseq0AXCR_l2HV-gk\",\n  authDomain: \"to-do-list-reactjs.firebaseapp.com\",\n  databaseURL: \"https://to-do-list-reactjs.firebaseio.com\",\n  projectId: \"to-do-list-reactjs\",\n  storageBucket: \"to-do-list-reactjs.appspot.com\",\n  messagingSenderId: \"460903040164\",\n  appId: \"1:460903040164:web:89796c6b6980de16d39231\",\n  measurementId: \"G-B6T3WSLLYZ\",\n};\nconst fire = firebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}